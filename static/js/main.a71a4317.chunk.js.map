{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","components/Card.jsx","components/Deck.jsx","components/Story.jsx","App.jsx","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Card","src","index","canvasRef","useRef","useState","discarded","setDiscarded","visible","setVisible","useEffect","renderCard","a","cardsPerPage","cardsPerRow","pageNumber","Math","floor","getPage","page","number","wantedColumn","wantedRow","viewport","getViewport","scale","cardViewport","cardWidth","width","cardHeight","height","offsetX","offsetY","transform","canvas","current","context","getContext","renderContext","canvasContext","renderTask","render","promise","style","display","gridTemplateColumns","gridTemplateRows","marginBottom","justifyItems","ref","gridColumn","gridRow","type","className","padding","borderRadius","boxShadow","onClick","previousState","alt","pdfjs","GlobalWorkerOptions","workerSrc","pdfjsWorker","Deck","playerId","playerCount","story","pdf","setPdf","loadingTask","getDocument","url","fetchPdf","cardStart","cardCount","getCardCount","i","deckSize","React","Children","toArray","Array","fill","map","value","Story","data","callback","flexDirection","justifyContent","boxSizing","backgroundImage","image","backgroundSize","backgroundPosition","backgroundColor","name","stories","App","wantedStory","setWantedStory","setPlayerCount","setPlayerId","href","action","fontSize","htmlFor","marginRight","onChange","event","target","min","max","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a71a4317.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 4;","/* eslint-disable react/prop-types */\nimport React, {\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nconst cardWidth = 6.164/* cm */;\nconst cardHeight = 12.269/* cm */;\nconst pageMarginX = (21/* cm */ - cardWidth * 3) / 2;\nconst pageMarginY = (29.7/* cm */ - cardHeight * 2) / 2;\n\nfunction Card({\n  src,\n  index,\n}) {\n  const canvasRef = useRef(null);\n  const [discarded, setDiscarded] = useState(false);\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    const renderCard = async () => {\n      const cardsPerRow = 3;\n      const rowsPerPage = 2;\n      const cardsPerPage = cardsPerRow * rowsPerPage;\n      const pageNumber = 1 + 2 * Math.floor(index / cardsPerPage) + (visible ? 0 : 1);\n\n      const page = await src.getPage(pageNumber);\n\n      const wantedColumn = ((number) => (\n        (pageNumber % 2 === 0)\n          ? ((cardsPerRow - 1) - number)\n          : number\n      ))(index % cardsPerRow);\n      const wantedRow = Math.floor((index % cardsPerPage) / cardsPerRow);\n\n      const scale = 2;\n      const viewport = page.getViewport({ scale });\n      const cardViewport = { ...viewport };\n\n      /* 0 / 47 / 277 / 786 */\n      cardViewport.cardWidth = (viewport.width * cardWidth) / 21;\n      /* 0 / 89 / 935 / 1024 */\n      cardViewport.cardHeight = (viewport.height * cardHeight) / 29.7;\n\n      cardViewport.offsetX = -(\n        wantedColumn * cardViewport.cardWidth\n      ) - (\n        viewport.width * pageMarginX\n      ) / 21;\n      cardViewport.offsetY = -(\n        wantedRow * cardViewport.cardHeight\n      ) - (\n        viewport.height * pageMarginY\n      ) / 29.7;\n\n      cardViewport.transform[4] += cardViewport.offsetX;\n      cardViewport.transform[5] += cardViewport.offsetY;\n\n      // Prepare canvas using PDF page dimensions\n      const canvas = canvasRef.current;\n\n      const context = canvas.getContext('2d');\n      canvas.height = cardViewport.cardHeight;\n      canvas.width = cardViewport.cardWidth;\n\n      // Render PDF page into canvas context\n      const renderContext = {\n        canvasContext: context,\n        viewport: cardViewport,\n      };\n      const renderTask = page.render(renderContext);\n\n      await renderTask.promise;\n    };\n\n    if (src && canvasRef.current) {\n      renderCard();\n    }\n  });\n\n  return (discarded) || (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        gridTemplateRows: 'auto 16px auto',\n        marginBottom: '1rem',\n        justifyItems: 'center',\n      }}\n    >\n      <canvas\n        ref={canvasRef}\n        style={{\n          display: 'inline-block',\n          width: `${cardWidth * 1.5}cm`,\n          height: `${cardHeight * 1.5}cm`,\n          gridColumn: '1/-1',\n          gridRow: '1/3',\n        }}\n      />\n      <button\n        type=\"button\"\n        className=\"button\"\n        style={{\n          width: '64px',\n          height: '64px',\n          padding: '.5rem',\n          borderRadius: '50%',\n          gridColumn: '1/2',\n          gridRow: '2/4',\n          boxShadow: '0 0 5px 0 black',\n        }}\n        onClick={() => { setVisible((previousState) => (!previousState)); }}\n      >\n        <img\n          src={visible ? './hide.svg' : './show.svg'}\n          alt={visible ? 'masquer' : 'afficher'}\n        />\n      </button>\n      <button\n        type=\"button\"\n        className=\"button\"\n        style={{\n          width: '64px',\n          height: '64px',\n          padding: '.5rem',\n          borderRadius: '50%',\n          gridColumn: '2/3',\n          gridRow: '2/4',\n          boxShadow: '0 0 5px 0 black',\n        }}\n        onClick={() => { setDiscarded(true); }}\n      >\n        <img\n          src=\"./trash.svg\"\n          alt=\"défausser\"\n        />\n      </button>\n    </div>\n  );\n}\n\nexport default Card;\n","/* eslint-disable react/prop-types */\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\n\nimport pdfjs from 'pdfjs-dist';\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\n\nimport Card from './Card';\n\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nfunction Deck({\n  playerId,\n  playerCount,\n  story,\n}) {\n  const [pdf, setPdf] = useState(null);\n\n  useEffect(() => {\n    const fetchPdf = async () => {\n      const loadingTask = pdfjs.getDocument(story.url);\n\n      setPdf(await loadingTask.promise);\n    };\n\n    fetchPdf();\n  }, [story.url]);\n\n  let cardStart = 0;\n  let cardCount = 0;\n\n  const getCardCount = (i) => (\n    Math.floor(story.deckSize / playerCount)\n      + (i <= story.deckSize % playerCount ? 1 : 0)\n  );\n\n  for (let i = 1; i <= playerId; i += 1) {\n    cardStart += cardCount;\n    cardCount = getCardCount(i);\n  }\n\n  return (\n    <>\n      {pdf == null ? (\n        <p>chargement...</p>\n      ) : (\n        React.Children.toArray((new Array(cardCount)).fill(0).map(\n          (value, index) => <Card src={pdf} index={cardStart + index} />,\n        ))\n      )}\n    </>\n  );\n}\n\nexport default Deck;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction Story({\n  data,\n  callback,\n}) {\n  return (\n    <button\n      type=\"button\"\n      onClick={callback}\n      style={{\n        display: 'inline-flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n        boxSizing: 'border-box',\n        padding: '0',\n        width: '300px',\n        height: '400px',\n        marginBottom: '1rem',\n        backgroundImage: `url(${data.image})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n      }}\n    >\n      <strong\n        style={{\n          display: 'inline-block',\n          boxSizing: 'border-box',\n          padding: '1rem',\n          backgroundColor: 'white',\n        }}\n      >\n        {data.name}\n      </strong>\n    </button>\n  );\n}\n\nexport default Story;\n","import React, {\n  useState,\n} from 'react';\n\nimport Deck from './components/Deck';\nimport Story from './components/Story';\n\nimport './App.css';\n\nconst stories = [{\n  name: 'Tutoriel',\n  image: 'https://static.wixstatic.com/media/59baa2_081be07951c34ce28996bebe7cfa86ec~mv2.png/v1/fill/w_173,h_158,al_c,q_85,usm_0.66_1.00_0.01/mouse.webp',\n  url: 'https://017aae6e-7d2b-4a50-9dfc-d78eced3774e.filesusr.com/ugd/59baa2_5dbfd556434846bf8754ca4116101f37.pdf',\n  deckSize: 10,\n}, {\n  name: 'La 5è avenue',\n  image: 'https://static.wixstatic.com/media/59baa2_8bc2d8990f864c7aa65bdcc294674dd1~mv2_d_2000_2828_s_2.png/v1/fill/w_209,h_295,al_c,q_85,usm_0.66_1.00_0.01/CoverArt_5Avenue.webp',\n  url: 'https://017aae6e-7d2b-4a50-9dfc-d78eced3774e.filesusr.com/ugd/59baa2_b414561726024995b66b03ecef774c8b.pdf',\n  deckSize: 27,\n}, /* {\n  name: 'Le donjon de Doo-Arann',\n  image: 'https://static.wixstatic.com/media/59baa2_05b28f37bcbc434ca47ce6ab7baf1508~mv2_d_2480_3508_s_4_2.png/v1/fill/w_211,h_295,al_c,q_85,usm_0.66_1.00_0.01/CoverArt_Unlock_DooAraan.webp',\n  url: 'https://017aae6e-7d2b-4a50-9dfc-d78eced3774e.filesusr.com/ugd/59baa2_d7f24d940eea4cfa89b7400dfb581459.pdf',\n  deckSize: 24,\n}, */ {\n  name: 'L\\'élite',\n  image: 'https://static.wixstatic.com/media/59baa2_fc82f6175d0a49d69f7755f8aedec7fd~mv2.jpg/v1/fill/w_210,h_322,al_c,q_80,usm_0.66_1.00_0.01/Cover_Demo.webp',\n  url: 'https://017aae6e-7d2b-4a50-9dfc-d78eced3774e.filesusr.com/ugd/59baa2_fcba9236512e4b2b912e26150ca01264.pdf',\n  deckSize: 20,\n}, /* {\n  name: 'À la poursuite de Cabrakan',\n  image: 'https://static.wixstatic.com/media/59baa2_ec89ebe3425b4ffab33d0cd3e836df58~mv2_d_3508_5393_s_4_2.jpg/v1/fill/w_211,h_322,al_c,q_80,usm_0.66_1.00_0.01/CoverArt_Cabrakan.webp',\n  url: 'https://017aae6e-7d2b-4a50-9dfc-d78eced3774e.filesusr.com/ugd/59baa2_ec1d34bb0fe246069dd7dc12ebf8697d.pdf',\n  deckSize: 24,\n}, */ {\n  name: 'Le temple de RA',\n  image: 'https://static.wixstatic.com/media/59baa2_9d2e29d0b0474af68a5be337d5a0b914~mv2_d_2304_3543_s_2.png/v1/fill/w_208,h_322,al_c,q_85,usm_0.66_1.00_0.01/CoverArt_Temple%20de%20RA.webp',\n  url: 'https://017aae6e-7d2b-4a50-9dfc-d78eced3774e.filesusr.com/ugd/59baa2_164fbfd3e76b4dbcb46282074693f098.pdf',\n  deckSize: 24,\n}];\n\nfunction App() {\n  const [wantedStory, setWantedStory] = useState(null);\n  const [playerCount, setPlayerCount] = useState(1);\n  const [playerId, setPlayerId] = useState(1);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {\n          wantedStory == null\n            ? (\n              <>\n                <h1\n                  style={{\n                    gridColumn: '1/-1',\n                  }}\n                >\n                  Unlock! (don&apos;t) Print and Play\n                </h1>\n                <p\n                  style={{\n                    gridColumn: '1/-1',\n                  }}\n                >\n                  Envie de profiter des&nbsp;\n                  <a href=\"https://www.spacecowboys.fr/unlock-demos\">\n                    démos Unlock!\n                  </a>\n                  , mais pas d&apos;imprimante sous la main ?\n                  <br />\n                  Ce site vous permet de vous échapper en ligne.\n                </p>\n                <form\n                  action=\"#\"\n                  style={{\n                    gridColumn: '1/-1',\n                    fontSize: '1rem',\n                  }}\n                >\n                  <strong\n                    style={{\n                      display: 'block',\n                      marginBottom: '1rem',\n                    }}\n                  >\n                    option multi-joueur : partagez les cartes entre plusieurs ordis\n                  </strong>\n                  <div\n                    style={{\n                      marginBottom: '1rem',\n                    }}\n                  >\n                    <label\n                      htmlFor=\"playerCount\"\n                      style={{\n                        marginRight: '1rem',\n                      }}\n                    >\n                      Nombre de joueurs :\n                    </label>\n                    <input\n                      id=\"playerCount\"\n                      name=\"playerCount\"\n                      type=\"number\"\n                      value={playerCount}\n                      onChange={(event) => { setPlayerCount(event.target.value); }}\n                      min=\"1\"\n                      max=\"6\"\n                    />\n                  </div>\n                  <div\n                    style={{\n                      marginBottom: '1rem',\n                    }}\n                  >\n                    <label\n                      htmlFor=\"playerId\"\n                      style={{\n                        marginRight: '1rem',\n                      }}\n                    >\n                      Vous êtes le joueur :\n                    </label>\n                    <input\n                      id=\"playerId\"\n                      name=\"playerId\"\n                      type=\"number\"\n                      value={playerId}\n                      onChange={(event) => { setPlayerId(event.target.value); }}\n                      min=\"1\"\n                      max={playerCount}\n                    />\n                  </div>\n                </form>\n                {React.Children.toArray(stories.map((story) => (\n                  <Story data={story} callback={() => setWantedStory(story)} />\n                )))}\n              </>\n            )\n            : (\n              <>\n                <div\n                  style={{\n                    gridColumn: '1/-1',\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"link\"\n                    onClick={() => setWantedStory(null)}\n                  >\n                    Accueil\n                  </button>\n                </div>\n                <Deck playerId={playerId} playerCount={playerCount} story={wantedStory} />\n              </>\n            )\n        }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}